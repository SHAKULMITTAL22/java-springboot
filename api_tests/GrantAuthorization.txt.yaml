# ********RoostGPT********

# Test generated by RoostGPT for test api-test using AI Type DBRX and AI Model dbrx-instruct-032724
# 
# ROOST_METHOD_HASH=803fe763f5
# ROOST_METHOD_SIG_HASH=c56a467b87
# 
#    ########## Scenario ##########  
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Grant authorization\r\n' +
#     '    Given an existing account, create another account\r\n' +
#     '    When the client sends a POST request to "/authorizations"\r\n' +
#     '    Then grant access to your account and confirm access via GET request to "/authorizations"',
#   title: 'Grant authorization'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 10
      arrivalRate: 10
  processor: "./scripts/generate-payload.js"
  payload:
    path: "GrantAuthorization.txt.csv"
    delimiter: "^|^"
  plugins:
    expect: {}
    log: {}

scenarios:
  - scenario: "Grant authorization"
    flow:
      - log: "Create a new account"
        method: "POST"
        url: "/accounts?name={{ payload.account_name }}&email={{ payload.account_email }}&password={{ payload.account_password }}"
        expect:
          statusCode: 201
      - log: "Login to existing account"
        method: "PATCH"
        url: "/accounts?email={{ payload.account_email }}&password={{ payload.account_password }}"
        headers:
          Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
        expect:
          statusCode: 200
      - log: "Create another account"
        method: "POST"
        url: "/accounts?name={{ payload.account_name_2 }}&email={{ payload.account_email_2 }}&password={{ payload.account_password_2 }}"
        expect:
          statusCode: 201
      - log: "Grant access to your account"
        method: "POST"
        url: "/authorizations"
        headers:
          Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          Content-Type: "application/json"
        json:
          account_id: "{{ payload.account_id }}"
        expect:
          statusCode: 201
          hasProperty:
            - id
            - account_id
            - created_at
      - log: "Confirm access via GET request to /authorizations"
        method: "GET"
        url: "/authorizations"
        headers:
          Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
        expect:
          statusCode: 200
          hasProperty:
            - id
            - account
            - created_at
          jmespath:
            account.id: "{{ payload.account_id }}"
