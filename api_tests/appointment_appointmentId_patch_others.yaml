# ********RoostGPT********

# Test generated by RoostGPT for test API-test-Vtal using AI Type Open AI and AI Model gpt-4-turbo
# 
# Test generated for /appointment/{appointmentId}_patch for http method type PATCH in artillery framework
# RoostTestHash=33f5f2e325
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "appointment_appointmentId_patch_others.csv"
    fields:
      - "appointmentId"
      - "slotId"
      - "reason"
    skipHeader: true
    delimiter: "^|^"

scenarios:
  - name: "Test Non-Success API Responses"
    flow:
      - log: "Testing with invalid appointmentId"
      - patch:
          url: "/appointment/invalidId"
          headers:
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            appointment:
              slot:
                id: "{{ slotId }}"
              reason: "{{ reason }}"
          expect:
            - statusCode: 404
      - think: 1

      - log: "Testing with valid appointmentId but invalid slotId"
      - patch:
          url: "/appointment/{{ appointmentId }}"
          headers:
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            appointment:
              slot:
                id: "invalid-slot-id"
              reason: "{{ reason }}"
          expect:
            - statusCode: 400
      - think: 1

      - log: "Testing with valid appointmentId but missing reason"
      - patch:
          url: "/appointment/{{ appointmentId }}"
          headers:
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            appointment:
              slot:
                id: "{{ slotId }}"
          expect:
            - statusCode: 400
      - think: 1

      - log: "Testing with unauthorized access"
      - patch:
          url: "/appointment/{{ appointmentId }}"
          headers:
            Authorization: "Bearer invalid_token"
          json:
            appointment:
              slot:
                id: "{{ slotId }}"
              reason: "{{ reason }}"
          expect:
            - statusCode: 401
      - think: 1
