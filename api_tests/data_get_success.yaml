# ********RoostGPT********

# Test generated by RoostGPT for test API-test-Vtal using AI Type Open AI and AI Model gpt-4-turbo
# 
# Test generated for /data_get for http method type GET in artillery framework
# RoostTestHash=b77323eb47
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 5
  payload:
    path: "data_get_success.csv"
    fields:
      - "id"
      - "info"
      - "timestamp"
    skipHeader: true
    delimiter: "^|^"
  environments:
    staging:
      target: "https://staging-api.example.com"
  plugins:
    expect: {}

scenarios:
  - name: "Validate Successful API Responses"
    flow:
      - log: "Starting GET request to retrieve data with valid input."
      - get:
          url: "/data"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "id"
            - hasProperty: "info"
            - hasProperty: "timestamp"
            - matchesRegexp: "id"
            - matchesRegexp: "info"
            - matchesRegexp: "timestamp"
          capture:
            json: "$.id"
            as: "responseId"
      - think: 1

      - log: "Starting POST request to submit data with valid payload."
      - post:
          url: "/data"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            info: "{{ info }}"
            timestamp: "{{ timestamp }}"
          expect:
            - statusCode: 201
            - hasProperty: "id"
            - hasProperty: "info"
            - hasProperty: "timestamp"
      - think: 1

      - log: "Starting PATCH request to update data with valid payload."
      - patch:
          url: "/data/{{ responseId }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            info: "Updated information"
          expect:
            - statusCode: 200
            - hasProperty: "info"
            - equals: 
                json: "$.info"
                value: "Updated information"
      - think: 1

      - log: "Starting DELETE request to remove data."
      - delete:
          url: "/data/{{ responseId }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_ID }}"
          expect:
            - statusCode: 204
      - think: 1
