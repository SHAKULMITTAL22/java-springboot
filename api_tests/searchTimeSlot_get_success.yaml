# ********RoostGPT********

# Test generated by RoostGPT for test API-test-Vtal using AI Type Open AI and AI Model gpt-4-turbo
# 
# Test generated for /searchTimeSlot_get for http method type GET in artillery framework
# RoostTestHash=0e2f009f7e
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 5
  payload:
    path: "searchTimeSlot_get_success.csv"
    skipHeader: true
    fields:
      - "addressId"
      - "subscriberId"
      - "associatedDocument"
      - "startDate"
      - "finishDate"
      - "orderType"
      - "addressChangeFlag"
      - "productType"
      - "priorityFlag"
      - "priorityReason"
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "Validate successful responses for searchTimeSlot API"
    flow:
      - log: "Starting GET request for searchTimeSlot with valid parameters"
      - get:
          url: "/searchTimeSlot?addressId={{ addressId }}&subscriberId={{ subscriberId }}&associatedDocument={{ associatedDocument }}&startDate={{ startDate }}&finishDate={{ finishDate }}&orderType={{ orderType }}&addressChangeFlag={{ addressChangeFlag }}&productType={{ productType }}&priorityFlag={{ priorityFlag }}&priorityReason={{ priorityReason }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_token }}"
          expect:
            - statusCode: 200
            - hasProperty: "control"
            - hasProperty: "slots"
            - matchesRegexp: "control.type"
            - matchesRegexp: "control.message"
            - matchesRegexp: "control.code"
            - matchesRegexp: "slots[0].id"
            - matchesRegexp: "slots[0].startDate"
            - matchesRegexp: "slots[0].finishDate"
            - matchesRegexp: "slots[0].expireIn"
      - think: 1

      - log: "Starting GET request for searchTimeSlot with minimal required parameters"
      - get:
          url: "/searchTimeSlot?addressId={{ addressId }}&startDate={{ startDate }}&finishDate={{ finishDate }}&orderType={{ orderType }}&productType={{ productType }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_token }}"
          expect:
            - statusCode: 200
            - hasProperty: "control"
            - hasProperty: "slots"
      - think: 1
