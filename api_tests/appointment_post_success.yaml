# ********RoostGPT********

# Test generated by RoostGPT for test API-test-Vtal using AI Type Open AI and AI Model gpt-4o
# 
# Test generated for /appointment_post for http method type POST in artillery framework
# RoostTestHash=b7eaf9bc25
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "appointment_post_success.csv"
    skipHeader: true
    delimiter: "^|^"
  variables:
    auth_token: "{{ $processEnvironment.AUTH_TOKEN }}"

scenarios:
  - name: "Appointment API Success Responses"
    flow:
      - log: "Starting scenario: Post Appointment"
      - post:
          url: "/appointment"
          headers:
            Content-Type: application/json
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            appointment:
              slot:
                id: "{{ slot_id }}"
              reason: "{{ appointment_reason }}"
      - expect:
          statusCode: 201
      - expect:
          hasHeader: "Content-Type"
      - expect:
          headerEquals:
            name: "Content-Type"
            value: "application/json"
      - expect:
          hasProperty: "order"
      - expect:
          hasProperty: "order.type"
      - expect:
          hasProperty: "order.associatedDocument"
      - expect:
          hasProperty: "order.addressChange"
      - expect:
          hasProperty: "order.addressChange.flag"
      - expect:
          hasProperty: "customer"
      - expect:
          hasProperty: "customer.subscriberId"
      - expect:
          hasProperty: "appointment"
      - expect:
          hasProperty: "appointment.id"
      - expect:
          hasProperty: "appointment.startDate"
      - expect:
          hasProperty: "appointment.finishDate"
      - expect:
          hasProperty: "appointment.priority"
      - expect:
          hasProperty: "appointment.priority.flag"
      - expect:
          hasProperty: "appointment.priority.reason"
      - expect:
          hasProperty: "address"
      - expect:
          hasProperty: "address.id"
      - expect:
          hasProperty: "products"
      - expect:
          hasProperty: "products.product"
      - expect:
          hasProperty: "control"
      - expect:
          hasProperty: "control.type"
      - expect:
          hasProperty: "control.message"
      - expect:
          hasProperty: "control.code"
      - think: 2
