# ********RoostGPT********

# Test generated by RoostGPT for test api-test using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# ROOST_METHOD_HASH=803fe763f5
# ROOST_METHOD_SIG_HASH=c56a467b87
# 
#    ########## Scenario ##########  
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Grant authorization\r\n' +
#     '    Given an existing account, create another account\r\n' +
#     '    When the client sends a POST request to "/authorizations"\r\n' +
#     '    Then grant access to your account and confirm access via GET request to "/authorizations"',
#   title: 'Grant authorization'
# }
# 

# ********RoostGPT********
config:
  target: "http://localhost:8080"
  phases:
    - duration: 10
      arrivalRate: 1
  payload:
    path: "users.csv"
    fields:
      - "email"
      - "password"
      - "name"
    delimiter: "^|^"
    skipHeader: true

scenarios:
  - name: "Grant authorization"
    flow:
      - post:
          url: "/accounts"
          json:
            email: "{{ email }}"
            password: "{{ password }}"
            name: "{{ name }}"
          expect:
            - statusCode: 200
      - post:
          url: "/login"
          json:
            email: "{{ email }}"
            password: "{{ password }}"
          capture:
            json: "$.token"
            as: "token1"
          expect:
            - statusCode: 200
      - post:
          url: "/accounts"
          json:
            email: "{{ $randomString() }}@example.com"
            password: "{{ $randomString() }}"
            name: "Account 2"
          capture:
            json: "$.id"
            as: "account2Id"
          expect:
            - statusCode: 200
      - post:
          url: "/authorizations"
          headers:
            Authorization: "Bearer {{ token1 }}"
          json:
            accountId: "{{ account2Id }}"
          expect:
            - statusCode: 200
      - get:
          url: "/authorizations"
          headers:
            Authorization: "Bearer {{ token1 }}"
          expect:
            - statusCode: 200
            - contentType: application/json
            - hasProperty: authorizations
            - hasProperty: authorizations[0].id
            - hasProperty: authorizations[0].accountId
            - equals:
              - "authorizations[0].accountId"
              - "{{ account2Id }}"
