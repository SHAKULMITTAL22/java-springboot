# ********RoostGPT********

# Test generated by RoostGPT for test api-test using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# ROOST_METHOD_HASH=803fe763f5
# ROOST_METHOD_SIG_HASH=c56a467b87
# 
#    ########## Scenario ##########  
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Grant authorization\r\n' +
#     '    Given an existing account, create another account\r\n' +
#     '    When the client sends a POST request to "/authorizations"\r\n' +
#     '    Then grant access to your account and confirm access via GET request to "/authorizations"',
#   title: 'Grant authorization'
# }
# 

# ********RoostGPT********
config:
  target: "http://localhost:8080"
  phases:
    - duration: 10
      arrivalRate: 1
  variables:
    username: "testuser"
    password: "password123"
    newUsername: "newuser"
    newPassword: "newpass456"

scenarios:
  - name: "Grant authorization"
    flow:
      - log: "Existing account logs in and creates a new account"
      - post:
          url: "/login"
          json:
            username: "{{ username }}"
            password: "{{ password }}"
          capture:
            json: "$.token"
            as: "authToken"
      - post:
          url: "/users"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            username: "{{ newUsername }}"
            password: "{{ newPassword }}"
          expect:
            - statusCode: 201
            - hasProperty: "id"
            - hasProperty: "username"
            - equals:
                - "{{ newUsername }}"
                - "{{ response.username }}"
      - log: "Client sends POST request to grant access to new account"  
      - post:
          url: "/authorizations"
          headers:
            Authorization: "Bearer {{ authToken }}"
          json:
            grantee_id: "{{ newUsername }}"
          expect:
            - statusCode: 201
            - hasProperty: "id"
            - hasProperty: "grantor_id"
            - hasProperty: "grantee_id"
            - equals:
                - "{{ username }}"
                - "{{ response.grantor_id }}"
            - equals:  
                - "{{ newUsername }}"
                - "{{ response.grantee_id }}"
      - log: "Confirm access granted via GET request"
      - get:
          url: "/authorizations"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200
            - hasProperty: "authorizations"
            - jmesPath: "authorizations[?grantee_id=='{{ newUsername }}'].id"
