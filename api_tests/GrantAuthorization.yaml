# ********RoostGPT********

# Test generated by RoostGPT for test api-test using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# ROOST_METHOD_HASH=803fe763f5
# ROOST_METHOD_SIG_HASH=c56a467b87
# 
#    ########## Scenario ##########  
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Grant authorization\r\n' +
#     '    Given an existing account, create another account\r\n' +
#     '    When the client sends a POST request to "/authorizations"\r\n' +
#     '    Then grant access to your account and confirm access via GET request to "/authorizations"',
#   title: 'Grant authorization'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 10
      arrivalRate: 1
  expect:
    - statusCode: 201
    - statusCode: 200

scenarios:
  - name: "Grant authorization"
    flow:
      - log: "Create a new account to grant access to"
      - post:
          url: "/accounts"
          headers:
            commit-hash: "928d28d"
          json:
            email: "{{ grantEmail }}"
          capture:
            json: "$.id"
            as: "grantAccountId"
          expect:
            - statusCode: 201
            - hasHeader: "api-version"
            - headerEquals:
                name: "api-version"
                value: "1.0.0"
            - hasHeader: "commit-hash"
            - headerEquals:
                name: "commit-hash"
                value: "928d28d"
      - log: "Create another account"
      - post:
          url: "/accounts"
          headers:
            commit-hash: "928d28d"
          json:
            email: "{{ accountEmail }}"
          capture:
            json: "$.id"
            as: "accountId"
          expect:
            - statusCode: 201
            - hasHeader: "api-version"
            - headerEquals:
                name: "api-version"
                value: "1.0.0"
            - hasHeader: "commit-hash"
            - headerEquals:
                name: "commit-hash"
                value: "928d28d"
      - log: "Grant access to the account"
      - post:
          url: "/authorizations"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            accountId: "{{ accountId }}"
            grantAccountId: "{{ grantAccountId }}"
          expect:
            - statusCode: 201
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "email"
            - hasProperty: "createdAt"
            - hasProperty: "updatedAt"
            - hasHeader: "api-version"
            - headerEquals:
                name: "api-version"
                value: "1.0.0"
            - hasHeader: "location"
      - log: "Confirm access was granted"
      - get:
          url: "/grants"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "total"
            - hasProperty: "grants"
            - jmespath: "grants[0].id"
            - jmespath: "grants[0].token"
            - jmespath: "grants[0].createdAt"
            - jmespath: "grants[0].updatedAt"
            - jmespath: "grants[0].account"
            - hasHeader: "api-version"
            - headerEquals:
                name: "api-version"
                value: "1.0.0"
      - think: 2
